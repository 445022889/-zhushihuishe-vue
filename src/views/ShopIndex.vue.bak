<template>
    <div>
    <BingheHeader/>

    <div class="md-example-child md-example-child-scroll-view md-example-child-scroll-view-5">
        <md-tab-bar
                v-model="activeBlockIndex"
                :items="mainCate"
                :max-length="5"
                ref="tabBar"
                @change="$_onTabChange"
        ></md-tab-bar>
        <md-scroll-view
                class="scroll-view-with-tab-bar sp_shop"
                ref="scrollView"
                :scrolling-x="false"
                @scroll="$_onScroll"
                @mousedown.native="$_onScrollStart"
                @touchstart.native="$_onScrollStart"
        >
            <div
                    v-for="i in category"
                    :key="i"
                    class="scroll-view-category"
            >
                <md-cell-item
                        class="scroll-view-list"
                        v-for="j in list"
                        :key="j"
                        :title="'产品'+i +'-'+j" brief="展示产品型号">

                    <md-tag
                            slot="default"
                            size="small"
                            shape="circle"
                            sharp="bottom-left"
                            type="fill"
                            fill-color="linear-gradient(90deg, #FC7353 0%, #FC9153 100%)"
                            font-color="#fff"
                            style="margin: 3px 0;float: left"
                    >￥99.56</md-tag>

                    <span class="holder" slot="left"></span>
                    <md-stepper slot="right" :step="1.3"  :min="0"/>
                </md-cell-item>


            </div>
        </md-scroll-view>
    </div>
    </div>
</template>

<script>
    import {ScrollView, TabBar} from 'mand-mobile'
    import BingheHeader from "@/components/BingheHeader"


    const debounce = function(fn, delay) {
        let timer
        return function() {
            const context = this
            timer && clearTimeout(timer)

            timer = setTimeout(function() {
                fn.apply(context, arguments)
            }, delay)
        }
    }
    export default {
        name: 'scroll-view-demo-3',
        components: {
            [ScrollView.name]: ScrollView,
            [TabBar.name]: TabBar,BingheHeader
        },
        data() {
            return {
                category: 10,
                list: 5,
                dimensions: [],
                scrollY: 0,
                isManual: false,
                activeBlockIndex: 0,
                mainCate:[
                    {name: 1, label: "分类1"},
                    {name: 2, label: "分类2"},
                    {name: 3, label: "分类3"},
                    {name: 4, label: "分类4"},
                    {name: 5, label: "分类5"},
                    {name: 6, label: "分类6"},
                    {name: 7, label: "分类7"},
                    {name: 8, label: "分类8"},
                    {name: 9, label: "分类9"},
                    {name: 10, label: "分类10"}
                ]

            }
        },
        mounted() {
            // 如果内容发生变化，需重新初始化block和scroller
            this.$_initScrollBlock()

          this.$refs.scrollView.reflowScroller()
        },
        methods: {
            $_initScrollBlock() {
                const blocks = this.$el.querySelectorAll('.scroll-view-category')
                let offset = 0
                Array.prototype.slice.call(blocks).forEach((block, index) => {
                    const innerHeight = block.clientHeight
                    this.$set(this.dimensions, index, [offset, offset + innerHeight])
                    offset += innerHeight
                })

               setTimeout(() => {
                 this.$refs.tabBar.reflow()
                 }, 1000)
            },
            $_onScrollStart() {
                this.isManual = false
            },
            $_onScroll({scrollTop}) {
                if (!this.isManual) {
                    this.dimensions.some((dimension, index) => {
                        if (scrollTop >= dimension[0] && scrollTop <= dimension[1]) {
                            this.activeBlockIndex = index
                            return true
                        }
                    })
                }
            },
            $_onTabChange(item, index) {
                this.isManual = true
                debounce(() => {
                    const offsetTop = this.dimensions[index][0]
                    this.$refs.scrollView.scrollTo(0, offsetTop, true)
                    this.scrollY = offsetTop
                }, 100)()
            },
        },
    }

</script>
<style>
    .md-scroll-view .scroll-view-container.horizon{
        display: block!important;

    }
    .sp_shop{
        padding: 0 .3rem;
    }

</style>
<style lang="stylus">


    .md-example-child-scroll-view-5
        position relative
        height calc(100vh - 1.5rem)
        background #FFF
        .md-tab-bar
            position absolute
            left 0
            top 0
            right 0
            z-index 2
            box-shadow 0 2px 8px #f0f0f0
            background #FFFFFF
        .scroll-view-with-tab-bar
            & > .scroll-view-container
                padding-top 100px
            .scroll-view-item
                padding 30px 0
                text-align center
                font-size 32px
                border-bottom .5px solid #efefef
</style>